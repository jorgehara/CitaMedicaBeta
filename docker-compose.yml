version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=Consultorio2025
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh -u root -p Consultorio2025 --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 20s

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://root:Consultorio2025@mongodb:27017/consultorio?authSource=admin
      - PORT=3001
      - TZ=America/Argentina/Buenos_Aires
      - CORS_ORIGINS=*
    expose:
      - "3001"
    networks:
      - app-network
    depends_on:
      mongodb:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  chatbot:
    build: 
      context: ./base-ts-baileys-memory
      dockerfile: Dockerfile
      target: production
    container_name: chatbot
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://root:Consultorio2025@mongodb:27017/consultorio?authSource=admin
      - PORT=3008
      - TZ=America/Argentina/Buenos_Aires
    expose:
      - "3008"
    volumes:
      - chatbot_sessions:/app/bot_sessions
      - chatbot_tmp:/app/tmp
    networks:
      - app-network
    depends_on:
      mongodb:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: unless-stopped
    networks:
      - app-network
    expose:
      - "80"
    depends_on:
      - backend
      - chatbot

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
      - /etc/letsencrypt/live/micitamedica.me/fullchain.pem:/etc/ssl/certs/fullchain.pem:ro
      - /etc/letsencrypt/live/micitamedica.me/privkey.pem:/etc/ssl/private/privkey.pem:ro
    networks:
      - app-network
    depends_on:
      - frontend
      - backend
      - chatbot
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  chatbot_sessions:
    driver: local
  chatbot_tmp:
    driver: local