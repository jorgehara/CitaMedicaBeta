events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Configuraciones de optimización
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;
    
    resolver 127.0.0.11;

    # Configuración de logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Redirección HTTP a HTTPS
    server {
        listen 80;
        server_name micitamedica.me www.micitamedica.me;
        return 301 https://$host$request_uri;
    }

    # Configuración principal HTTPS
    server {
        listen 443 ssl;
        server_name micitamedica.me www.micitamedica.me;
        
        # Certificados SSL
        ssl_certificate /etc/letsencrypt/live/micitamedica.me/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/micitamedica.me/privkey.pem;
        
        # Configuraciones mejoradas de seguridad SSL
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_buffer_size 4k;
        
        # Configuraciones de seguridad adicionales
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # Configuración de archivos estáticos
        root /usr/share/nginx/html;
        index index.html index.htm;

        # Configuración de caché para archivos estáticos
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            expires 1y;
            add_header Cache-Control "public, no-transform";
        }
        
        # API backend
        location /api/ {
            proxy_pass http://backend:3001;  # Sin barra al final
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Configuración CORS para el backend
            add_header 'Access-Control-Allow-Origin' 'https://micitamedica.me' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

            # Manejo de OPTIONS para CORS
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'https://micitamedica.me' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # Frontend: sirve SPA
        location / {
            try_files $uri $uri/ /index.html;
            
            # Configuración de seguridad para el frontend
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
            
            # Caché para el index.html
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }
    }
}
